$("._tab").click(function() {
    let parentBlock = $(this).parents("._tabs-parent")
    let tabId = $(this).attr("data-tab")
    $(parentBlock).find("._tab").removeClass("_active")
    $(this).addClass("_active")
    $(parentBlock).find(".tab-content").removeClass("_active")
    $(parentBlock).find(`.${tabId}`).addClass("_active")
})

$(".qa-card__show").click(function () {
    $(this).parents(".qa-card").toggleClass("_active")
    $(this).siblings(".qa-card__hidden").slideToggle()
})

setTimeout(function (){
    mainCardAnimate($(".main-card:nth-child(1)"),1)
},2000)


function mainCardAnimate(el,num){
    $(el).addClass("_active")
    setTimeout(function () {
        $(el).removeClass("_active")
        if(num === 5){
            num = 1
        } else{
            num++
        }
        mainCardAnimate($(`.main-card:nth-child(${num})`),num)
    },1000)
}
$(".burger").click(function () {
    $(".header").toggleClass("_open")
    $("body").toggleClass("fixed-body")
})

$(".nav__link").click(function () {
    $(".header").removeClass("_open")
    $("body").removeClass("fixed-body")
})


function Sliders() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".slider")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)
        let isLoop = slider.classList.contains("_loop")
        SlidersArray[index] = new Swiper(`.slider[data-slider-id="${index}"] .swiper-container`, {
            slidesPerView: "auto",
            spaceBetween: 0,
            watchSlidesProgress: true,
            preventClicks :true,
            a11y: false,
            observer: true,
            observeParents: true,
            observeSlideChildren: true,
            loop: isLoop,
            navigation: {
                nextEl: `.slider[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.slider[data-slider-id="${index}"] .swiper-button-prev`,
            },
            pagination: {
                el: `.slider[data-slider-id="${index}"] .swiper-pagination`,
                type: 'bullets',
                clickable: true,
            },
        })
    })
}

Sliders()

function feedbackSlider() {
    var swiper = new Swiper('.feedback-slider .swiper-container', {
        slidesPerView: "auto",
        spaceBetween: 0,
        watchSlidesProgress: true,
        preventClicks :true,
        a11y: false,
        observer: true,
        observeParents: true,
        observeSlideChildren: true,
        loop: true,
        navigation: {
            nextEl: '.feedback-slider .swiper-button-next',
            prevEl: '.feedback-slider .swiper-button-prev',
        },
    })

    swiper.on('slideChange', function () {
        let activeSlide = swiper.slides[swiper.activeIndex]
        let video = activeSlide.querySelector('.video-custom-play')
        stopAllVideos()
        playVideo(video)
    });
}
feedbackSlider()
// $(document).on('click', '.video-play-icon', function (e) {
//     let video = jQuery(this).parents(".video-custom-play").find("video")[0];
//     if (video.paused === false) {
//         video.pause();
//         $(this).parents(".video-custom-play").removeClass("is-video-playing");
//     } else {
//         video.play();
//         $(this).parents(".video-custom-play").addClass("is-video-playing");
//     }
//     return false;
// });

let videos = document.querySelectorAll('.video-custom-play');
videos.forEach(video => {
    let media = video.querySelector("video");
    let btn = video.querySelector(".video-play-icon");
    video.onclick = function () {
        console.log(video)
        if(video.classList.contains("is-video-playing")){
            console.log(media)
            stopAllVideos()
        }else{
            console.log("play")
            stopAllVideos()
            playVideo(video)
        }
    }
})

function stopAllVideos(){
    videos.forEach(video => {
        let media = video.querySelector("video");

        media.pause()
        video.classList.remove("is-video-playing");
    })
}

function playVideo(video){
    let media = video.querySelector("video");
    media.play();
    video.classList.add("is-video-playing");
}
let fileInput = document.querySelector("[data-upload-id='file-input']")

if(fileInput){
    console.log(fileInput)
    const upload = new FileUploadWithPreview.FileUploadWithPreview('file-input');

    upload.options.multiple = true

    $(document).on('change', '.input-container input', function(e) {
        $(this).parents(".file-input").addClass("_uploaded")
    })

    $(document).on('click', '.image-preview-item-clear', function(e) {
        let count = $(this).parents(".file-input").find(".image-preview-item").length
        if(count === 1){
            $(this).parents(".file-input").removeClass("_uploaded")
        }
    })
}



let body = document.querySelector("body")
let modalTogglers = document.querySelectorAll("[data-modal]")
let modals = document.querySelectorAll(".modal")

modalTogglers.forEach(el => {
    el.onclick = function () {
        let modalId = el.getAttribute("data-modal")
        openModal(modalId)
    }
})

function closeModals() {
    modals.forEach(modal => {
        modal.classList.remove("_active")
        body.classList.remove("fixed-body2")
    })
}

function openModal(modalId) {
    closeModals()
    let modal = document.querySelector(`#${modalId}`)
    let closeButtons = modal.querySelectorAll(`._close-modal`)

    modal.classList.add("_active")
    body.classList.add("fixed-body2")


    closeButtons.forEach(btn => {
        btn.onclick = ()=> {
            modal.classList.remove("_active")
            body.classList.remove("fixed-body2")
        }
    })
}

var getScrollBarSize = (function() {
    var el = window.document.createElement('textarea'), style = {
        'visibility': 'hidden', 'position': 'absolute', 'zIndex': '-2147483647',
        'top': '-1000px', 'left': '-1000px', 'width': '1000px', 'height': '1000px',
        'overflow': 'scroll', 'margin': '0', 'border': '0', 'padding': '0'
    }, support = el.clientWidth !== undefined && el.offsetWidth !== undefined;

    for (var key in style) {
        if (style.hasOwnProperty(key)) {
            el.style[key] = style[key];
        }
    }

    return function() {
        var size = null;
        if (support && window.document.body) {
            window.document.body.appendChild(el);
            size = [el.offsetWidth - el.clientWidth, el.offsetHeight - el.clientHeight];
            window.document.body.removeChild(el);
        }

        document.documentElement.style.setProperty('--scrollWidth', `${size[0]}px`);
        return size;
    };
})();


window.addEventListener('DOMContentLoaded', () => {
    fix100vh();
    window.addEventListener('resize', () => {
        fix100vh();
        getScrollBarSize()
    })

    getScrollBarSize()

    // $('input[type="tel"]').mask('+7 (999) 999-99-99', { autoclear: false }, { placeholder: '+7 (   )    -  -  ' });
})

function fix100vh() {
    let vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
}

//# sourceMappingURL=../sourcemaps/main.min.js.map
